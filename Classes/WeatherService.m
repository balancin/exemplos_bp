/*-
 * WSDL stubs for:  http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl
 *   Generated by:  fabiobalancin
 *           Date:  Thu Aug 26 18:47:35 2010
 *        Emitter:  Objective-C
 */

#import "WeatherService.h"

/*-
 *   Method Name:  NDFDgenByDay
 * Documentation:  Returns National Weather Service digital weather forecast data
 *                 summarized over either 24- or 12-hourly periods
 */
@implementation NDFDgenByDay
- (void) setParameters:(double) in_latitude in_longitude:(double) in_longitude in_startDate:(CFTypeRef /* Complex type http://www.w3.org/2001/XMLSchema|date */) in_startDate in_numDays:(CFTypeRef /* Complex type http://www.w3.org/2001/XMLSchema|integer */) in_numDays in_format:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|formatType */) in_format
{
    id _paramValues[] = {    
        [NSNumber numberWithDouble: in_latitude],        
        [NSNumber numberWithDouble: in_longitude],        
        in_startDate,        
        in_numDays,        
        in_format,        
    };    
    NSString* _paramNames[] = {    
        @"latitude",        
        @"longitude",        
        @"startDate",        
        @"numDays",        
        @"format",        
    };    
    [super setParameters:5 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"dwmlByDayOut"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://www.weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php"            
                 methodName: @"NDFDgenByDay"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgenByDay"            
            methodNamespace: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl"            
        ];        
}

@end; /* NDFDgenByDay */


/*-
 *   Method Name:  NDFDgen
 * Documentation:  Returns National Weather Service digital weather forecast data
 */
@implementation NDFDgen
- (void) setParameters:(double) in_latitude in_longitude:(double) in_longitude in_product:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|productType */) in_product in_startTime:(NSDate*) in_startTime in_endTime:(NSDate*) in_endTime in_weatherParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|weatherParametersType */) in_weatherParameters
{
    id _paramValues[] = {    
        [NSNumber numberWithDouble: in_latitude],        
        [NSNumber numberWithDouble: in_longitude],        
        in_product,        
        in_startTime,        
        in_endTime,        
        in_weatherParameters,        
    };    
    NSString* _paramNames[] = {    
        @"latitude",        
        @"longitude",        
        @"product",        
        @"startTime",        
        @"endTime",        
        @"weatherParameters",        
    };    
    [super setParameters:6 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"dwmlOut"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://www.weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php"            
                 methodName: @"NDFDgen"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgen"            
            methodNamespace: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl"            
        ];        
}

@end; /* NDFDgen */


/*-
 *   Method Name:  NDFDgenByDayLatLonList
 * Documentation:  Returns National Weather Service digital weather forecast data
 *                 summarized over either 24- or 12-hourly periods
 */
@implementation NDFDgenByDayLatLonList
- (void) setParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|listLatLonType */) in_listLatLon in_startDate:(CFTypeRef /* Complex type http://www.w3.org/2001/XMLSchema|date */) in_startDate in_numDays:(CFTypeRef /* Complex type http://www.w3.org/2001/XMLSchema|integer */) in_numDays in_format:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|formatType */) in_format
{
    id _paramValues[] = {    
        in_listLatLon,        
        in_startDate,        
        in_numDays,        
        in_format,        
    };    
    NSString* _paramNames[] = {    
        @"listLatLon",        
        @"startDate",        
        @"numDays",        
        @"format",        
    };    
    [super setParameters:4 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"dwmlByDayOut"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://www.weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php"            
                 methodName: @"NDFDgenByDayLatLonList"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgenByDayLatLonList"            
            methodNamespace: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl"            
        ];        
}

@end; /* NDFDgenByDayLatLonList */


/*-
 *   Method Name:  GmlTimeSeries
 * Documentation:  Returns National Weather Service digital weather forecast data
 *                 encoded in GML for a time period
 */
@implementation GmlTimeSeries
- (void) setParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|listLatLonType */) in_listLatLon in_startTime:(NSDate*) in_startTime in_endTime:(NSDate*) in_endTime in_compType:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|compTypeType */) in_compType in_featureType:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|featureTypeType */) in_featureType in_propertyName:(NSString*) in_propertyName
{
    id _paramValues[] = {    
        in_listLatLon,        
        in_startTime,        
        in_endTime,        
        in_compType,        
        in_featureType,        
        in_propertyName,        
    };    
    NSString* _paramNames[] = {    
        @"listLatLon",        
        @"startTime",        
        @"endTime",        
        @"compType",        
        @"featureType",        
        @"propertyName",        
    };    
    [super setParameters:6 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"dwGmlOut"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://www.weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php"            
                 methodName: @"GmlTimeSeries"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#GmlTimeSeries"            
            methodNamespace: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl"            
        ];        
}

@end; /* GmlTimeSeries */


/*-
 *   Method Name:  LatLonListCityNames
 * Documentation:  Returns a list of latitude and longitude pairs paired with the city
 *                 names they correspond to
 */
@implementation LatLonListCityNames
- (void) setParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|displayLevelType */) in_displayLevel
{
    id _paramValues[] = {    
        in_displayLevel,        
    };    
    NSString* _paramNames[] = {    
        @"displayLevel",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"listCityNamesOut"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://www.weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php"            
                 methodName: @"LatLonListCityNames"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListCityNames"            
            methodNamespace: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl"            
        ];        
}

@end; /* LatLonListCityNames */


/*-
 *   Method Name:  LatLonListSquare
 * Documentation:  Returns a list of latitude and longitude pairs in a rectangle
 *                 defined by a central point and distance from that point in the
 *                 latitudinal and longitudinal directions
 */
@implementation LatLonListSquare
- (void) setParameters:(double) in_centerPointLat in_centerPointLon:(double) in_centerPointLon in_distanceLat:(double) in_distanceLat in_distanceLon:(double) in_distanceLon in_resolution:(double) in_resolution
{
    id _paramValues[] = {    
        [NSNumber numberWithDouble: in_centerPointLat],        
        [NSNumber numberWithDouble: in_centerPointLon],        
        [NSNumber numberWithDouble: in_distanceLat],        
        [NSNumber numberWithDouble: in_distanceLon],        
        [NSNumber numberWithDouble: in_resolution],        
    };    
    NSString* _paramNames[] = {    
        @"centerPointLat",        
        @"centerPointLon",        
        @"distanceLat",        
        @"distanceLon",        
        @"resolution",        
    };    
    [super setParameters:5 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"listLatLonOut"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://www.weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php"            
                 methodName: @"LatLonListSquare"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListSquare"            
            methodNamespace: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl"            
        ];        
}

@end; /* LatLonListSquare */


/*-
 *   Method Name:  LatLonListLine
 * Documentation:  Returns a list of latitude and longitude pairs along a line defined
 *                 by the latitude and longitude of the 2 endpoints
 */
@implementation LatLonListLine
- (void) setParameters:(double) in_endPoint1Lat in_endPoint1Lon:(double) in_endPoint1Lon in_endPoint2Lat:(double) in_endPoint2Lat in_endPoint2Lon:(double) in_endPoint2Lon
{
    id _paramValues[] = {    
        [NSNumber numberWithDouble: in_endPoint1Lat],        
        [NSNumber numberWithDouble: in_endPoint1Lon],        
        [NSNumber numberWithDouble: in_endPoint2Lat],        
        [NSNumber numberWithDouble: in_endPoint2Lon],        
    };    
    NSString* _paramNames[] = {    
        @"endPoint1Lat",        
        @"endPoint1Lon",        
        @"endPoint2Lat",        
        @"endPoint2Lon",        
    };    
    [super setParameters:4 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"listLatLonOut"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://www.weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php"            
                 methodName: @"LatLonListLine"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListLine"            
            methodNamespace: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl"            
        ];        
}

@end; /* LatLonListLine */


/*-
 *   Method Name:  LatLonListSubgrid
 * Documentation:  Returns a list of latitude and longitude pairs in a rectangular
 *                 subgrid defined by the lower left and upper right points
 */
@implementation LatLonListSubgrid
- (void) setParameters:(double) in_lowerLeftLatitude in_lowerLeftLongitude:(double) in_lowerLeftLongitude in_upperRightLatitude:(double) in_upperRightLatitude in_upperRightLongitude:(double) in_upperRightLongitude in_resolution:(double) in_resolution
{
    id _paramValues[] = {    
        [NSNumber numberWithDouble: in_lowerLeftLatitude],        
        [NSNumber numberWithDouble: in_lowerLeftLongitude],        
        [NSNumber numberWithDouble: in_upperRightLatitude],        
        [NSNumber numberWithDouble: in_upperRightLongitude],        
        [NSNumber numberWithDouble: in_resolution],        
    };    
    NSString* _paramNames[] = {    
        @"lowerLeftLatitude",        
        @"lowerLeftLongitude",        
        @"upperRightLatitude",        
        @"upperRightLongitude",        
        @"resolution",        
    };    
    [super setParameters:5 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"listLatLonOut"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://www.weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php"            
                 methodName: @"LatLonListSubgrid"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListSubgrid"            
            methodNamespace: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl"            
        ];        
}

@end; /* LatLonListSubgrid */


/*-
 *   Method Name:  CornerPoints
 * Documentation:  Returns four latitude and longitude pairs for corners of an NDFD
 *                 grid and the minimum resolution that will return the entire grid
 */
@implementation CornerPoints
- (void) setParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|sectorType */) in_sector
{
    id _paramValues[] = {    
        in_sector,        
    };    
    NSString* _paramNames[] = {    
        @"sector",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"listLatLonOut"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://www.weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php"            
                 methodName: @"CornerPoints"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#CornerPoints"            
            methodNamespace: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl"            
        ];        
}

@end; /* CornerPoints */


/*-
 *   Method Name:  NDFDgenLatLonList
 * Documentation:  Returns National Weather Service digital weather forecast data
 */
@implementation NDFDgenLatLonList
- (void) setParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|listLatLonType */) in_listLatLon in_product:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|productType */) in_product in_startTime:(NSDate*) in_startTime in_endTime:(NSDate*) in_endTime in_weatherParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|weatherParametersType */) in_weatherParameters
{
    id _paramValues[] = {    
        in_listLatLon,        
        in_product,        
        in_startTime,        
        in_endTime,        
        in_weatherParameters,        
    };    
    NSString* _paramNames[] = {    
        @"listLatLon",        
        @"product",        
        @"startTime",        
        @"endTime",        
        @"weatherParameters",        
    };    
    [super setParameters:5 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"dwmlOut"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://www.weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php"            
                 methodName: @"NDFDgenLatLonList"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#NDFDgenLatLonList"            
            methodNamespace: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl"            
        ];        
}

@end; /* NDFDgenLatLonList */


/*-
 *   Method Name:  LatLonListZipCode
 * Documentation:  Returns a list of latitude and longitude pairs with each pair
 *                 corresponding to an input zip code.
 */
@implementation LatLonListZipCode
- (void) setParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|zipCodeListType */) in_zipCodeList
{
    id _paramValues[] = {    
        in_zipCodeList,        
    };    
    NSString* _paramNames[] = {    
        @"zipCodeList",        
    };    
    [super setParameters:1 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"listLatLonOut"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://www.weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php"            
                 methodName: @"LatLonListZipCode"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#LatLonListZipCode"            
            methodNamespace: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl"            
        ];        
}

@end; /* LatLonListZipCode */


/*-
 *   Method Name:  GmlLatLonList
 * Documentation:  Returns National Weather Service digital weather forecast data
 *                 encoded in GML for a single time
 */
@implementation GmlLatLonList
- (void) setParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|listLatLonType */) in_listLatLon in_requestedTime:(NSDate*) in_requestedTime in_featureType:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|featureTypeType */) in_featureType in_weatherParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|weatherParametersType */) in_weatherParameters
{
    id _paramValues[] = {    
        in_listLatLon,        
        in_requestedTime,        
        in_featureType,        
        in_weatherParameters,        
    };    
    NSString* _paramNames[] = {    
        @"listLatLon",        
        @"requestedTime",        
        @"featureType",        
        @"weatherParameters",        
    };    
    [super setParameters:4 values: _paramValues names: _paramNames];    
}

- (id) resultValue
{
    return [[super getResultDictionary] objectForKey: @"dwGmlOut"];    
}

- (WSMethodInvocationRef) genCreateInvocationRef
{
    return [self createInvocationRef    
               /*endpoint*/: @"http://www.weather.gov/forecasts/xml/SOAP_server/ndfdXMLserver.php"            
                 methodName: @"GmlLatLonList"            
                 protocol: (NSString*) kWSSOAP2001Protocol            
                      style: (NSString*) kWSSOAPStyleRPC            
                 soapAction: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl#GmlLatLonList"            
            methodNamespace: @"http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl"            
        ];        
}

@end; /* GmlLatLonList */



@implementation ndfdXMLService

+ (id) NDFDgenByDay:(double) in_latitude in_longitude:(double) in_longitude in_startDate:(CFTypeRef /* Complex type http://www.w3.org/2001/XMLSchema|date */) in_startDate in_numDays:(CFTypeRef /* Complex type http://www.w3.org/2001/XMLSchema|integer */) in_numDays in_format:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|formatType */) in_format
{
    id result = NULL;    
    NDFDgenByDay* _invocation = [[NDFDgenByDay alloc] init];    
    [_invocation setParameters: in_latitude in_longitude:in_longitude in_startDate:in_startDate in_numDays:in_numDays in_format:in_format];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) NDFDgen:(double) in_latitude in_longitude:(double) in_longitude in_product:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|productType */) in_product in_startTime:(NSDate*) in_startTime in_endTime:(NSDate*) in_endTime in_weatherParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|weatherParametersType */) in_weatherParameters
{
    id result = NULL;    
    NDFDgen* _invocation = [[NDFDgen alloc] init];    
    [_invocation setParameters: in_latitude in_longitude:in_longitude in_product:in_product in_startTime:in_startTime in_endTime:in_endTime in_weatherParameters:in_weatherParameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) NDFDgenByDayLatLonList:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|listLatLonType */) in_listLatLon in_startDate:(CFTypeRef /* Complex type http://www.w3.org/2001/XMLSchema|date */) in_startDate in_numDays:(CFTypeRef /* Complex type http://www.w3.org/2001/XMLSchema|integer */) in_numDays in_format:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|formatType */) in_format
{
    id result = NULL;    
    NDFDgenByDayLatLonList* _invocation = [[NDFDgenByDayLatLonList alloc] init];    
    [_invocation setParameters: in_listLatLon in_startDate:in_startDate in_numDays:in_numDays in_format:in_format];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) LatLonListCityNames:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|displayLevelType */) in_displayLevel
{
    id result = NULL;    
    LatLonListCityNames* _invocation = [[LatLonListCityNames alloc] init];    
    [_invocation setParameters: in_displayLevel];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GmlTimeSeries:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|listLatLonType */) in_listLatLon in_startTime:(NSDate*) in_startTime in_endTime:(NSDate*) in_endTime in_compType:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|compTypeType */) in_compType in_featureType:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|featureTypeType */) in_featureType in_propertyName:(NSString*) in_propertyName
{
    id result = NULL;    
    GmlTimeSeries* _invocation = [[GmlTimeSeries alloc] init];    
    [_invocation setParameters: in_listLatLon in_startTime:in_startTime in_endTime:in_endTime in_compType:in_compType in_featureType:in_featureType in_propertyName:in_propertyName];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) LatLonListSquare:(double) in_centerPointLat in_centerPointLon:(double) in_centerPointLon in_distanceLat:(double) in_distanceLat in_distanceLon:(double) in_distanceLon in_resolution:(double) in_resolution
{
    id result = NULL;    
    LatLonListSquare* _invocation = [[LatLonListSquare alloc] init];    
    [_invocation setParameters: in_centerPointLat in_centerPointLon:in_centerPointLon in_distanceLat:in_distanceLat in_distanceLon:in_distanceLon in_resolution:in_resolution];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) LatLonListLine:(double) in_endPoint1Lat in_endPoint1Lon:(double) in_endPoint1Lon in_endPoint2Lat:(double) in_endPoint2Lat in_endPoint2Lon:(double) in_endPoint2Lon
{
    id result = NULL;    
    LatLonListLine* _invocation = [[LatLonListLine alloc] init];    
    [_invocation setParameters: in_endPoint1Lat in_endPoint1Lon:in_endPoint1Lon in_endPoint2Lat:in_endPoint2Lat in_endPoint2Lon:in_endPoint2Lon];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) LatLonListSubgrid:(double) in_lowerLeftLatitude in_lowerLeftLongitude:(double) in_lowerLeftLongitude in_upperRightLatitude:(double) in_upperRightLatitude in_upperRightLongitude:(double) in_upperRightLongitude in_resolution:(double) in_resolution
{
    id result = NULL;    
    LatLonListSubgrid* _invocation = [[LatLonListSubgrid alloc] init];    
    [_invocation setParameters: in_lowerLeftLatitude in_lowerLeftLongitude:in_lowerLeftLongitude in_upperRightLatitude:in_upperRightLatitude in_upperRightLongitude:in_upperRightLongitude in_resolution:in_resolution];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) CornerPoints:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|sectorType */) in_sector
{
    id result = NULL;    
    CornerPoints* _invocation = [[CornerPoints alloc] init];    
    [_invocation setParameters: in_sector];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) NDFDgenLatLonList:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|listLatLonType */) in_listLatLon in_product:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|productType */) in_product in_startTime:(NSDate*) in_startTime in_endTime:(NSDate*) in_endTime in_weatherParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|weatherParametersType */) in_weatherParameters
{
    id result = NULL;    
    NDFDgenLatLonList* _invocation = [[NDFDgenLatLonList alloc] init];    
    [_invocation setParameters: in_listLatLon in_product:in_product in_startTime:in_startTime in_endTime:in_endTime in_weatherParameters:in_weatherParameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) LatLonListZipCode:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|zipCodeListType */) in_zipCodeList
{
    id result = NULL;    
    LatLonListZipCode* _invocation = [[LatLonListZipCode alloc] init];    
    [_invocation setParameters: in_zipCodeList];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}


+ (id) GmlLatLonList:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|listLatLonType */) in_listLatLon in_requestedTime:(NSDate*) in_requestedTime in_featureType:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|featureTypeType */) in_featureType in_weatherParameters:(CFTypeRef /* Complex type http://www.weather.gov/forecasts/xml/DWMLgen/schema/DWML.xsd|weatherParametersType */) in_weatherParameters
{
    id result = NULL;    
    GmlLatLonList* _invocation = [[GmlLatLonList alloc] init];    
    [_invocation setParameters: in_listLatLon in_requestedTime:in_requestedTime in_featureType:in_featureType in_weatherParameters:in_weatherParameters];    
    result = [[_invocation resultValue] retain];    
    [_invocation release];    
    return result;    
}



@end;


/*-
 * End of WSDL document at
 * http://www.weather.gov/forecasts/xml/DWMLgen/wsdl/ndfdXML.wsdl
 */
